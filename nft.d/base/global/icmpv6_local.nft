# Handle IPv6 ICMP traffic for the input/output chains
#
#   * global_icmpv6_local -- base rules for input/output
#

# input / output
# RFC 4890 Section 4.4
#   4.4.  Recommendations for ICMPv6 Local Configuration Traffic
#   4.4.1.  Traffic That Must Not Be Dropped
#   4.4.2.  Traffic That Normally Should Not Be Dropped
#   4.4.4.  Traffic for Which a Policy Should Be Defined
#   4.4.5.  Traffic That Should Be Dropped Unless a Good Case Can Be Made
#
chain global_icmpv6_local {
    #> [4.4.1] Destination Unreachable (Type 1) - All codes
    ip6 nexthdr icmpv6 icmpv6 type 1 accept;

    #> [4.4.1] Packet Too Big (Type 2)
    ip6 nexthdr icmpv6 icmpv6 type 2 accept;

    #> [4.4.1] Time Exceeded (Type 3) - Code 0 only
    #> [4.4.2] Time Exceeded (Type 3) - Code 1
    ip6 nexthdr icmpv6 icmpv6 type 3 icmpv6 code 0-1 accept;

    #> [4.4.1] Parameter Problem (Type 4) - Codes 1 and 2 only
    #> [4.4.2] Parameter Problem (Type 4) - Code 0
    ip6 nexthdr icmpv6 icmpv6 type 4 icmpv6 code 0-2 accept;

    #> [4.4.1] Echo Request (Type 128)
    ip6 nexthdr icmpv6 icmpv6 type 128 limit rate 5/second accept;

    ## echo response not needed, include global_stateful instead
    ## #> [4.4.1] Echo Response (Type 129)
    ## ip6 nexthdr icmpv6 icmpv6 type 129 limit rate 5/second accept;

    #> [4.4.1] Router Solicitation (Type 133)
    ip6 nexthdr icmpv6 icmpv6 type 133 accept;

    #> [4.4.1] Router Advertisement (Type 134)
    ip6 nexthdr icmpv6 icmpv6 type 134 accept;

    #> [4.4.1] Neighbor Solicitation (Type 135)
    ip6 nexthdr icmpv6 icmpv6 type 135 accept;

    #> [4.4.1] Neighbor Advertisement (Type 136)
    ip6 nexthdr icmpv6 icmpv6 type 136 accept;

    #> [4.4.1] Inverse Neighbor Discovery Solicitation (Type 141)
    ip6 nexthdr icmpv6 icmpv6 type 141 accept;

    #> [4.4.1] Inverse Neighbor Discovery Advertisement (Type 142)
    ip6 nexthdr icmpv6 icmpv6 type 142 accept;

    #> [4.4.1] Listener Query (Type 130)
    ip6 nexthdr icmpv6 icmpv6 type 130 accept;

    #> [4.4.1] Listener Report (Type 131)
    ip6 nexthdr icmpv6 icmpv6 type 131 accept;

    #> [4.4.1] Listener Done (Type 132)
    ip6 nexthdr icmpv6 icmpv6 type 132 accept;

    #> [4.4.1] Listener Report v2 (Type 143)
    ip6 nexthdr icmpv6 icmpv6 type 143 accept;

    #> [4.4.1] Certificate Path Solicitation (Type 148)
    ip6 nexthdr icmpv6 icmpv6 type 148 accept;

    #> [4.4.1] Certificate Path Advertisement (Type 149)
    ip6 nexthdr icmpv6 icmpv6 type 149 accept;

    #> [4.4.1] Multicast Router Advertisement (Type 151)
    ip6 nexthdr icmpv6 icmpv6 type 151 accept;

    #> [4.4.1] Multicast Router Solicitation (Type 152)
    ip6 nexthdr icmpv6 icmpv6 type 152 accept;

    #> [4.4.1] Multicast Router Termination (Type 153)
    ip6 nexthdr icmpv6 icmpv6 type 153 accept;

    #> [4.4.4] Redirect (Type 137)
    ip6 nexthdr icmpv6 icmpv6 type 137 drop;

    #> [4.4.4] Node Information Query (Type 139)
    ip6 nexthdr icmpv6 icmpv6 type 139 drop;

    #> [4.4.4] Node Information Response (Type 140)
    ip6 nexthdr icmpv6 icmpv6 type 140 drop;

    #> [4.4.4] Unallocated Error messages
    # (Types 5-99 inclusive and 102-126 inclusive)
    ip6 nexthdr icmpv6 icmpv6 type {5-99, 102-126} drop;

    #> [4.4.5] experimental allocations: Types 100, 101, 200, and 201.
    ip6 nexthdr icmpv6 icmpv6 type {100, 101, 200, 201} drop;

    #> [4.4.5] extension type numbers: Types 127 and 255.
    ip6 nexthdr icmpv6 icmpv6 type {127, 255} drop;

    #> [4.4.5] informational messages with types not explicitly assigned by IANA:
    #  Types 154-199 inclusive and 202-254 inclusive
    ip6 nexthdr icmpv6 icmpv6 type {154-199, 202-254} drop;
}
